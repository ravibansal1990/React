{"version":3,"sources":["Components/Cards/cards.component.jsx","Components/card-list/card-list.component.jsx","Components/wonder-list/wonder-list.component.jsx","Components/search-Box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","uname","id","name","email","CardList","usersData","map","WonderList","wonders","wonder","SearchBox","placeholder","handleChange","type","onChange","App","handleClick","e","setState","searchField","target","value","state","fetch","then","response","json","users","userData","this","filteredUser","filter","user","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAElB,OAAQ,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACnB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCJXC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,UAAUC,KAAK,SAAAN,GAAK,OACtB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,UCLhBM,G,MAAa,SAAAX,GAEtB,OAAO,qBAAKC,UAAU,cAAf,SAEHD,EAAMY,QAAQF,KAAK,SAAAG,GAAM,OACrB,6BAAqBA,EAAOP,MAAnBO,EAAOR,WCLfS,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAcC,EAAkB,EAAlBA,aAEzC,OAAO,uBACCf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EAEbG,SAAYF,MCmDLG,E,kDAvDb,aAAc,IAAD,8BACX,gBAiBFC,YAAc,SAAAC,GAAM,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAhBzD,EAAKC,MAAQ,CAEXd,QAAS,CACD,CAACN,KAAO,YAAaD,GAAI,KACzB,CAACC,KAAO,wBAAyBD,GAAI,KACrC,CAACC,KAAO,sBAAuBD,GAAI,KACnC,CAACC,KAAO,oBAAqBD,GAAI,MAGzCI,UAAU,GAAKc,YAAa,IAXnB,E,qDAoBb,WAAoB,IAAD,OACPI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACb,UAAUsB,S,oBAKtD,WAAU,IAAD,OACDC,EAAWC,KAAKP,MAAMjB,UACtBc,EAAcU,KAAKP,MAAMH,YAC1BW,EAAeF,EAASG,QAAO,SAAAC,GAAI,OACxCA,EAAK9B,KAAK+B,cAAcC,SAASf,EAAYc,kBAC7C,OACE,sBAAKpC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACUc,YAAY,eACZC,aAAc,SAACK,GAAD,OAAS,EAAKC,SAAU,CAAEC,YAAcF,EAAEG,OAAOC,WAGzE,cAAC,EAAD,CAAUhB,UAAWyB,IAItB,cAAC,EAAD,CAAYtB,QAASqB,KAAKP,MAAMd,iB,GA9CnB2B,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ec36197.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Cards/cards.styles.css'\r\n\r\nexport const Card = props =>{\r\n\r\n  return  <div className='card-container'>\r\n       <img alt=\"users\" src={`https://robohash.org/${props.uname.id}?set=set3&size=180x180`}></img>\r\n        <h1>{props.uname.name}</h1>\r\n        <p>{props.uname.email}</p>\r\n    </div>\r\n};","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../Cards/cards.component';\r\n\r\nexport const CardList = props =>{\r\n\r\n    return <div className='card-list'>\r\n        {\r\n        props.usersData.map( uname => (\r\n            <Card key={uname.id} uname={uname}></Card>\r\n        //<h1 key={uname.id}>{uname.name}</h1>\r\n        ))\r\n        }\r\n        </div>;\r\n};\r\n","import React from 'react';\r\nimport './wonder-list.styles.css';\r\n\r\n\r\nexport const WonderList = props =>{\r\n\r\n    return <div className='wonder-list'>\r\n        {\r\n        props.wonders.map( wonder => (\r\n            <h1 key={wonder.id}>{wonder.name}</h1>))\r\n        }\r\n        </div>;\r\n};\r\n","import React from 'react';\r\nimport '../search-Box/search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) => {\r\n\r\nreturn <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n       // onChange={ e   => this.setState( { searchField : e.target.value})}\r\n        onChange = {handleChange}\r\n        >\r\n\r\n        </input>\r\n\r\n};","import React from 'react';\nimport './App.css';\n\nimport {CardList} from './Components/card-list/card-list.component'\nimport {WonderList} from './Components/wonder-list/wonder-list.component'\nimport {SearchBox} from './Components/search-Box/search-box.component'\nclass App extends React.Component    {\n  constructor(){\n    super();\n    this.state = {\n      \n      wonders: [\n              {name : 'Taj Mahal', id :'1'},\n              {name : 'Leaning Tower of Pisa', id :'2'},\n              {name : 'Great Wall of China', id :'3'},\n              {name : 'Statue of Liberty', id :'4'}\n      ],\n\n      usersData:[] , searchField :\"\"\n    };\n\n    \n\n  }\n\n  handleClick = e => {this.setState({ searchField : e.target.value})};\n  \n  componentDidMount(){\n              fetch('https://jsonplaceholder.typicode.com/users')\n              .then(response => response.json())\n              .then(users => this.setState({usersData:users}))\n\n  }\n\n\nrender() {\n  const userData = this.state.usersData;\n  const searchField = this.state.searchField;\n const filteredUser = userData.filter(user => \n  user.name.toLowerCase().includes(searchField.toLowerCase()));\n  return (\n    <div className=\"App\">\n      <h1>User Details</h1>\n      <SearchBox \n                placeholder='search users' \n                handleChange={(e)   => this.setState( { searchField : e.target.value})}>\n\n                </SearchBox>\n      <CardList usersData={filteredUser}>\n        \n      </CardList>\n\n     <WonderList wonders={this.state.wonders}>\n\n     </WonderList>\n\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}